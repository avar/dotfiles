[user]
	name = Ævar Arnfjörð Bjarmason
	email = avarab@gmail.com
[github]
	login = avar
[include]
	#path = ~/.gitconfig.d/user-email
	path = ~/.gitconfig.d/github-token

[color]
	ui = auto

;; Don't be so invasive about coloring ^M when I'm editing files that
;; are supposed to have \r\n.
[color "diff"]
   whitespace = 0

[alias]
	;; Lazyness
	st = status --short
	ci = commit
	co = checkout
	sm = submodule
	chrp = cherry-pick

	;; Log
	lo = log --decorate --abbrev-commit --stat
	tree = log --graph --pretty=format:'%C(yellow)%h%Creset -%C(bold red)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

	;; Submodules
	sm-init = !git submodule update --init
	; Try to update all the submodules, doing some guesswork to get branch names
	sm-pull-all = !git submodule foreach 'git checkout $(NAME=$name git sm-mainbranch) && git pull'
	; Manually specify a branch from the main config, or try to guess it
	sm-mainbranch = !git config --file ../.gitmodules submodule.$NAME.branch || git describe --all --always | sed 's!^heads/!!'

	;; Diff
    di     = diff -M -p --stat
    diw    = diff -M -p --stat -w
    diww   = diff -M -p --stat -w --word-diff=color
    diwwd  = diff -M -p --stat -w --word-diff=color --word-diff-regex=.
    dis    = diff -M -p --stat --staged
    disw   = diff -M -p --stat --staged -w
    disww  = diff -M -p --stat --staged -w --word-diff=color
    diswwd = diff -M -p --stat --staged -w --word-diff=color --word-diff-regex=.
    ;; Show
    s      = show -M -p --stat
    sw     = show -M -p --stat -w
    sww    = show -M -p --stat -w --word-diff=color
    swwd   = show -M -p --stat -w --word-diff=color --word-diff-regex=.

	;; Pull/push
	pu = pull --stat

	;; Handy tools
	review = "!f() { for rev in $(git rev-list --reverse $@); do git show --stat -p -M $rev; done; }; f"
[push]
	default = tracking
[pull]
	rebase = true
[sendemail]
	smtpserver = smtp.gmail.com
	smtpssl = 1
	smtpuser = avarab@gmail.com
	confirm = always
[rebase]
	autosquash = true
	;; Show stat output on rebase to show what changed
	stat = true
[http]
	sslVerify = false
[grep]
	lineNumber = true
	extendedRegexp = true
[log]
	;; Show tags and other references in "git log"
	decorate = short
	;; Abbreviate commits by default. I.e. don't show a full SHA1
	abbrevCommit = true
[merge]
	;; Create non-ff merge commits. Pretty much the only use I have for 'git merge'
	ff = true
	;; Have "git merge" do what "git pull" would have done
	defaultToUpstream = true
[annex]
	backends = SHA256E SHA256
