source /home/avar/.screenrc
source /home/aearnfjord/.screenrc

sessionname dev-core-git

screen -t g:0 bash
stuff "cd ~/g/git^M"

screen -t g:1 bash
stuff "cd ~/g/git^M"

screen -t g:2 bash
stuff "cd ~/g/git^M"

screen -t g:3 bash
stuff "cd ~/g/git^M"

screen -t p:0 bash
stuff "cd ~/g/git^M"
stuff "cd t/perf^M"
stuff "# GIT_PERF_LARGE_REPO=~/g/linux ./run p7820-grep-engines.sh^M"

screen -t p:1 bash
stuff "cd ~/g/git^M"
stuff "cd t/perf^M"

screen -t c:d:r bash
stuff "cd ~/g/git^M"
stuff "# git rebase -i --exec 'time make -j \$(parallel --number-of-cores) USE_LIBPCRE=1 LIBPCREDIR=\$HOME/g/pcre2/inst CFLAGS=\"-O0 -g\" DEVELOPER=1 prefix=/usr all && (cd t && GIT_TEST_HTTPD=1 prove -j\$(parallel --number-of-cores) t000[0-9]*.sh)'^M"

screen -t c:d bash
stuff "cd ~/g/git^M"
stuff "# time make -j \$(parallel --number-of-cores) USE_LIBPCRE=1 LIBPCREDIR=\$HOME/g/pcre2/inst CFLAGS=\"-O0 -g\" DEVELOPER=1 prefix=/usr all^M"
stuff "# time make -j \$(parallel --number-of-cores) USE_LIBPCRE=1 LIBPCREDIR=\$HOME/g/pcre2/inst CFLAGS=\"-O0 -g\" DEVELOPER=1 prefix=/usr all^M"

screen -t c:o bash
stuff "cd ~/g/git^M"
stuff "time make -j \$(parallel --number-of-cores) USE_LIBPCRE=1 LIBPCREDIR=\$HOME/g/pcre2/inst CFLAGS=\"-O3 -g\" all"

screen -t t:0 bash
stuff "cd ~/g/git^M"
stuff "cd t^M"
stuff "# time NO_SVN_TESTS=1 GIT_TEST_HTTPD=0 prove -j\$(parallel --number-of-cores) --state=slow,save t[0-9]*.sh^M"
stuff "# time GIT_TEST_HTTPD=1 prove -j\$(parallel --number-of-cores) --state=slow,save t[0-9]*.sh^M"

screen -t t:1 bash
stuff "cd ~/g/git^M"
stuff "cd t^M"
stuff "./t7810-grep.sh -v -i"

screen -t t:2 bash
stuff "cd ~/g/git^M"
stuff "cd t^M"
stuff "time prove -j\$(parallel --number-of-cores) --state=slow,save t[0-9]*grep*.sh t[0-9]*log*.sh"

screen -t se:r bash
stuff "cd ~/g/git-patches^M"
stuff "git fetch^M"
stuff "git status^M"

screen -t se:new bash
stuff "cd ~/g/git^M"
stuff "# gpp -F --fpa='--subject-prefix=\"PATCH\"' --sea='--cc=\"Junio C Hamano <gitster@pobox.com>\"' --no-send^M"
stuff "# gpp -F --fpa='--subject-prefix=\"PATCH\" --cover-letter' --sea='--cc=\"Junio C Hamano <gitster@pobox.com>\" --cc=\"Jeff King <peff@peff.net>\"' --no-send^M"
stuff "# gpp -F --fpa='--cover-letter --subject-prefix=\"PATCH v2\" --range-diff=avar/XXX --in-reply-to=\"<>\"' --sea='--cc=\"Junio C Hamano <gitster@pobox.com>\"' --no-send^M"

screen -t ml:r
stuff "cd ~/g/git-ml^M"
stuff "while true; do if test \$(find ~/g/git -type f -mmin -1440 | wc -l) -gt 0; then git pull; else echo too old; fi ; date ; sleep 300; done^M"

screen -t ml:sh:0
stuff "cd ~/g/git-ml^M"
stuff "git --no-pager log --oneline -10^M"

screen -t r:pcre1
stuff "cd ~/g/pcre^M"
stuff "git svn rebase^M"
stuff "test -f RunTest && git clean -dxf; ./autogen.sh; CXXFLAGS='-O3 -g' CFLAGS='-O3 -g' ./configure --prefix=\$PWD/inst --enable-jit --enable-utf --enable-unicode-properties && time make -j \$(parallel --number-of-cores) install"

screen -t r:pcre2
stuff "cd ~/g/pcre2^M"
stuff "git svn rebase^M"
stuff "test -f RunTest && git clean -dxf; ./autogen.sh; CXXFLAGS='-O3 -g' CFLAGS='-O3 -g' ./configure --prefix=\$PWD/inst --enable-jit --enable-utf && time make -j \$(parallel --number-of-cores) install"

screen -t r:gnulib
stuff "cd ~/g/gnulib^M"
stuff "git fetch^M"

screen -t r:sha1dc
stuff "cd ~/g/sha1collisiondetection^M"
stuff "git fetch^M"

# Farm boxes @ https://cfarm.tetaneutral.net/machines/list/
screen -t t:gl:ci:0
stuff "cd ~/g/git-gitlab-ci^M"
stuff "git fetch^M"
stuff "grep '\^#' ci/gitlab/run-on-gcc-farm.sh^M"
stuff "# (cd ../git-gitlab-ci && OPT_JOBS=16 OPT_DEBUG=1 CI_JOB_NAME=gcc112 CI_GIT_COMMIT_SHA=HEAD OPT_NICE=1 ci/gitlab/run-on-gcc-farm.sh)^M"
stuff "# (cd ../git-gitlab-ci && OPT_DEBUG=1 CI_JOB_NAME='gcc119' CI_GIT_COMMIT_SHA=HEAD OPT_TESTS='t1450*.sh t4212*.sh t9300*.sh' ci/gitlab/run-on-gcc-farm.sh)^M"

screen -t t:gl:ci:1
stuff "cd ~/g/git-gitlab-ci^M"
stuff "git fetch^M"
stuff "grep '\^#' ci/gitlab/run-on-gcc-farm.sh^M"

screen -t t:gl:ci:2
stuff "cd ~/g/git-gitlab-ci^M"
stuff "git fetch^M"
stuff "grep '\^#' ci/gitlab/run-on-gcc-farm.sh^M"

select 0
