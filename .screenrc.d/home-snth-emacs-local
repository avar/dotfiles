source /home/avar/.screenrc

sessionname local

screen -t t bash
stuff "htop^M"

screen -t system:log bash
stuff "tail -F /var/log/{syslog,messages,auth.log,user.log,daemon.log,aptitude,kern.log,dpkg.log}^M"

screen -t m:avar:l bash
stuff "tail -F /var/mail/avar^M"

screen -t m:exim:l bash
stuff "tail -F /var/log/exim4/mainlog^M"

screen -t m:exim:q bash
# Shows the status of the exim mail queue, i.e. any stalled messages
stuff "sudo exim -bp^M"
# Forces sending of the messages, if any. See
# http://www.electrictoolbox.com/flush-exim-mail-queue/
# http://mewbies.com/how_to_setup_exim_mail_transfer_agent_for_linux_tutorial.htm
stuff "# sudo exim -qf # send stalled messages^M"
stuff "# sudo exim -qff # send stalled messages, even if frozen due to bounces^M"

# Work GMail setup
screen -t m:wg:md:size bash
stuff "du -sb ~/.mu ~/Maildir/work-gmail; du -sh ~/.mu ~/Maildir/work-gmail; find ~/Maildir/work-gmail/ -type f | wc -l; df -h /^M"

screen -t m:wg:md:find bash
stuff "find ~/Maildir/work-gmail -type f -mmin -5|wc -l # modified in the last 5mins^M"
stuff "find ~/Maildir/work-gmail -type f -cmin -5|wc -l # created in the last 5mins^M"

screen -t m:wg:stunnel bash
stuff "(stunnel .stunnel.work-gmail-imap || (kill \$(sudo netstat -ldnp|grep -F 127.0.0.1:1431|awk '{print \$7}'|awk -F/ '{print \$1}')) && echo Restarting && sleep 1 && stunnel .stunnel.work-gmail-imap)^M"

screen -t m:wg:stunnel:flow bash
stuff "sudo tcpflow -i lo -c port 1431^M"

screen -t m:wg:sync:<> bash
stuff "sleep 10^M"
# debug: -d imap,maildir
stuff "while true; do time python ~/g/offlineimap/offlineimap.py -a WorkGMail -c ~/.offlineimaprc ; sleep 60; done^M"

# mu
screen -t m:monitor bash
stuff "# while sleep 1; do time sudo perl ~/g/dotemacs/scripts/mu-monitor.pl; done^M"

screen -t m:index bash
stuff "# while sleep 30; do time mu index --maildir=~/Maildir/work --max-msg-size=500000000; done^M"

screen -t m:f:0 bash
stuff "export MU_HOME=/home/avar/.mu/work-gmail^M"
stuff "mu find -n 10 avar^M"

screen -t m:f:1 bash
stuff "export MU_HOME=/home/avar/.mu/work-gmail^M"
stuff "mu find -n 10 booking^M"

screen -t s:daemon-nm-dis:l bash
stuff "tail -f /var/log/daemon.log | grep nm-dispatcher^M"

screen -t s:squid:l bash
stuff "sudo tail -f /var/log/squid3/*.log^M"

# OpenVPN related
screen -t yubikey:hook bash
stuff "tail -n 0 -F /tmp/udev.70-youbikey-setxkbmap.hook | DISPLAY=:0 perl -nE 'say qx[setxkbmap -device \\$(xinput list | sed -n \"s/.*Yubikey.*id=\\\\([0-9]*\\\\).*keyboard.*/\\\\1/p\") -layout us 2>&1]'^M"

screen -t openvpn:connect bash
stuff "nmcli con up id 'booking'"

screen -t openvpn.log bash
stuff "tail -f /var/log/syslog | grep openvpn^M"

screen -t nm-dispatcher.log bash
stuff "tail -f /var/log/daemon.log | grep nm-dispatcher^M"

screen -t tcpflow:openvpn bash
stuff "sudo tcpflow -i wlan0 -c port 1194"

screen -t investigate bash
stuff "ip route list^M"
stuff "ip route get 10.252.13.1^M"
stuff "ip route get 8.8.8.8^M"

# The m:sync screen
select 9
